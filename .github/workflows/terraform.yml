name: "Provision a Custom VPC on AWS using Terraform"
run-name: ${{ github.actor }}

# It triggers on push events
on:
  push:
    paths-ignore:
      - '.github/workflows/**'
    branches:
      - 'main'

env:
  AWS_ROLE_ASSIGNMENT: ${{ secrets.AWS_ROLE_ASSIGNMENT }}
  AWS_REGION_ID: ""
  AWS_REGION_NAME: "Canada"
  AWS_OWNER_ID: ${{ secrets.AWS_OWNER_ID }}
  REGION_MAP: '{"Virginia":"us-east-1", "Ohio":"us-east-2", "California":"us-west-1", "Oregon":"us-west-2", "Mumbai":"ap-south-1", "Osaka":"ap-northeast-3", "Seoul":"ap-northeast-2", "Singapore":"ap-shoutheast-1", "Sydney":"ap-southeast-2", "Tokyo":"ap-northeast-1", "Canada":"ca-central-1", "Frankfurt":"eu-central-1", "Ireland":"eu-west-1", "London":"eu-west-2", "Paris":"eu-west-3", "Stockholm":"eu-north-1", "Sao Paulo":"sa-east-1"}'
  PLAN_OUT: "tfplan"

jobs:
  terraform_apply:
    permissions:
      id-token: write       # This is required for requesting the JWT (JSON web Token)
      contents: read        # This is required for actions/checkout
    runs-on: ubuntu-latest

    steps:
      - name: Get Region
        run: |
          AWS_REGION_ID=$(echo "$REGION_MAP" | jq -r --arg key "$AWS_REGION_NAME" '.[$key]')
          echo "AWS_REGION_ID=$AWS_REGION_ID" >> $GITHUB_ENV

      # Add your aws cli credentials as secrets into the repository
      - name: Get AWS permissions
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_OWNER_ID }}:role/${{ env.AWS_ROLE_ASSIGNMENT }}
          aws-region: ${{ env.AWS_REGION_ID }}

      - name: Checkout repo
        uses: actions/checkout@v3

      # Installs the selected version of Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.7.3'

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt

      - name: Terraform Validate
        run: terraform validate
        continue-on-error: true   # add it to pass a value in region variable using lookup function

      - name: Terraform Plan
        id: plan
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform plan -var 'region=${{ env.TF_region }}' -out=${{ env.PLAN_OUT }}
        env:
          TF_region: ${{ env.AWS_REGION_NAME }}

      - name: Terraform Apply
        id: apply
        if: success()
        run: terraform apply -auto-approve ${{ env.PLAN_OUT }}

      - name: Extract and Set S3 Bucket Name
        if: steps.apply.outcome == 'success'
        id: extract
        run: |
          BUCKET_NAME=$(terraform output -raw s3-bucket 2>/dev/null | tr -d '[:space:]')
          if [[ -z "$BUCKET_NAME" ]]; then
            echo "Error: s3 Bucket Name is empty!"
            exit 1
          fi
          echo "TF_S3_BUCKET_NAME=${BUCKET_NAME}" >> $GITHUB_ENV

      - name: Verify S3 Bucket Name
        if: steps.extract.outcome == 'success'
        id: verify
        run: |
          echo "Using S3 Bucket: $TF_S3_BUCKET_NAME"

      - name: Store State file in S3 Bucket
        if: steps.verify.outcome == 'success'
        run: aws s3 cp terraform.tfstate s3://$TF_S3_BUCKET_NAME/custom_vpc.tfstate
